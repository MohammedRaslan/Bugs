(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~checkout-checkout-module~learn-item-details-learn-item-details-module~learn-learn-module~my-~3905325e"],{

/***/ "./src/app/services/api.service.ts":
/*!*****************************************!*\
  !*** ./src/app/services/api.service.ts ***!
  \*****************************************/
/*! exports provided: ApiService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiService", function() { return ApiService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic/storage */ "./node_modules/@ionic/Storage/__ivy_ngcc__/fesm2015/ionic-storage.js");
/* harmony import */ var _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic-native/http/ngx */ "./node_modules/@ionic-native/http/__ivy_ngcc__/ngx/index.js");





let ApiService = class ApiService {
    constructor(http, secondHttp, storage) {
        this.http = http;
        this.secondHttp = secondHttp;
        this.storage = storage;
    }
    getHomeData() {
        console.log('home token');
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    console.log('home token');
                    console.log(token);
                    // let headers = new HttpHeaders();
                    // headers.append("Content-Type", "application/json");
                    // headers.append("Authorization", `Bearer ${tokens}`);
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    console.log('home token');
                    const data = this.http
                        .get("https://bugsnroses.com/api/app/home", {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    }))
                        .then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getBlogsData() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/blogs/all";
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getBlogContent(link) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    const data = this.http.get(link, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getAllProductsWithCategories() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    let url = "https://bugsnroses.com/api/app/products?page=1";
                    const data = this.http.get(url, {}, headers).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getProductsByCategory(id) {
        console.log("id" + id);
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    let url = `https://bugsnroses.com/api/products/cat?category_id=${id}`;
                    const data = this.http.get(url, {}, headers).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getNextProducts(link) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const data = this.http.get(link, {}, headers).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getAllCategories() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    let url = "https://bugsnroses.com/api/categories/all";
                    const data = this.http.get(url, {}, headers).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    getProfile() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/auth/get_profile";
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error).error);
                    });
                }
            });
        });
    }
    updateProfile(name, birthdate, email, phone, password, password_confirm, address1, address2) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    let body;
                    if (password == null) {
                        body = ({ name: name, mobile: phone, email: email, address1: address1, address2: address2 });
                    }
                    else {
                        body = ({ name: name, mobile: phone, email: email, password: password, password_confirmation: password_confirm, address1: address1, address2: address2 });
                    }
                    console.log(body);
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    this.http.setDataSerializer("utf8");
                    let url = "https://bugsnroses.com/api/auth/update";
                    const data = this.http.post(url, JSON.stringify(body), ({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    addToCart(items) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const body = { items: items };
                    let headers = new Headers();
                    headers.append("Content-Type", "application/json; charset=utf-8");
                    headers.append("Access-Control-Allow-Origin", "*");
                    headers.append("Authorization", `Bearer ${token}`);
                    let options = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        "Content-Type": "application/json; charset=utf-8",
                        "Access-Control-Allow-Origin": "*",
                        "Authorization": `Bearer ${token}`
                    });
                    // const headers = new HttpHeaders({
                    //   'Content-Type': 'application/json',
                    //   'Accept': 'application/json',
                    //   'Access-Control-Allow-Origin': '*',
                    //   'Authorization': `Bearer ${token}`
                    // })
                    const httpOptions = {
                        headers: options,
                    };
                    this.http.setDataSerializer("utf8");
                    let url = "https://bugsnroses.com/api/cart/add_products";
                    const data = this.http.post(url, JSON.stringify(body), ({
                        'Content-Type': 'application/json; charset=utf-8',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        // console.log(JSON.parse(res.data));
                        resolve(true);
                    }, (err) => {
                        console.log(err);
                        reject();
                    });
                }
            });
        });
    }
    checkPromoCode(code) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = `https://bugsnroses.com/api/promo/check?code=${code}`;
                    const data = this.http.post(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    getCartData() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/cart/get_products";
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    resetPassword(email) {
        return new Promise((resolve, reject) => {
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            });
            const httpOptions = {
                headers: headers,
            };
            let body = { email: email };
            // headers.append("Content-Type", "application/json");
            // headers.append('Authorization', 'Bearer ' + res)
            // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
            let url = `https://bugsnroses.com/api/auth/reset_password`;
            const data = this.http.post(url, body, ({
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            })).then((res) => {
                console.log(res);
                console.log(JSON.parse(res.data));
                resolve(JSON.parse(res.data));
            }, (err) => {
                console.log(err);
                reject(JSON.parse(err.error));
            });
        });
    }
    checkout() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/order/check_out";
                    this.http.setDataSerializer("utf8");
                    const data = this.http.post(url, JSON.stringify({}), ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    getOrderHistory() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/order/history";
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    like(blog_id) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/blogs/like";
                    const data = this.http.post(url, {
                        blog_id: blog_id
                    }, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    getBolg(blog_id) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/blogs/get?id=" + blog_id;
                    console.log(url);
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    comment(blog_id, comment) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    const body = {
                        blog_id: blog_id,
                        comment: comment
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/blogs/comment";
                    const data = this.http.post(url, body, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    getNotifications() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/notifications/all";
                    const data = this.http.get(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    makeNotificationsSeen() {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    });
                    const httpOptions = {
                        headers: headers,
                    };
                    // headers.append("Content-Type", "application/json");
                    // headers.append('Authorization', 'Bearer ' + res)
                    // headers.append('Authorization', 'Bearer ' + (JSON.parse(localStorage.getItem("userToken").trim())));
                    let url = "https://bugsnroses.com/api/notifications/seen";
                    const data = this.http.post(url, {}, ({
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Accept': 'application/json',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        console.log(JSON.parse(res.data));
                        resolve(JSON.parse(res.data));
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
    deleteComment(item) {
        return new Promise((resolve, reject) => {
            this.storage.get("token").then((token) => {
                if (token) {
                    const body = { comment_id: item };
                    let headers = new Headers();
                    headers.append("Content-Type", "application/json; charset=utf-8");
                    headers.append("Access-Control-Allow-Origin", "*");
                    headers.append("Authorization", `Bearer ${token}`);
                    let options = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
                        "Content-Type": "application/json; charset=utf-8",
                        "Access-Control-Allow-Origin": "*",
                        "Authorization": `Bearer ${token}`
                    });
                    // const headers = new HttpHeaders({
                    //   'Content-Type': 'application/json',
                    //   'Accept': 'application/json',
                    //   'Access-Control-Allow-Origin': '*',
                    //   'Authorization': `Bearer ${token}`
                    // })
                    const httpOptions = {
                        headers: options,
                    };
                    // this.http.setDataSerializer("utf8");
                    let url = "https://bugsnroses.com/api/blogs/delete_comment";
                    const data = this.http.post(url, (body), ({
                        'Content-Type': 'application/json; charset=utf-8',
                        'Accept': 'application/json',
                        'Access-Control-Allow-Origin': '*',
                        'Authorization': `Bearer ${token}`
                    })).then((res) => {
                        console.log(res);
                        // console.log(JSON.parse(res.data));
                        resolve(true);
                    }, (err) => {
                        console.log(err);
                        reject(JSON.parse(err.error));
                    });
                }
            });
        });
    }
};
ApiService.ctorParameters = () => [
    { type: _ionic_native_http_ngx__WEBPACK_IMPORTED_MODULE_4__["HTTP"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_3__["Storage"] }
];
ApiService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root",
    })
], ApiService);



/***/ }),

/***/ "./src/app/services/loading-service.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/services/loading-service.service.ts ***!
  \*****************************************************/
/*! exports provided: LoadingServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadingServiceService", function() { return LoadingServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");



let LoadingServiceService = class LoadingServiceService {
    constructor(loadingController) {
        this.loadingController = loadingController;
        this.isLoading = false;
        this.isNonRestrictedLoading = false;
    }
    // async present() {
    //   this.isLoading = true;
    //   await this.loadingController
    //     .create({
    //       cssClass: 'loading-content'
    //     })
    //     .then(a => {
    //       a.present().then(() => {
    //         if (!this.isLoading) {
    //           a.dismiss().then(() => console.log('abort presenting'));
    //         }
    //       });
    //     });
    // }
    // async dismiss() {
    //   this.isLoading = false;
    //   await this.loadingController.dismiss();
    // }
    present() {
        this.isLoading = true;
        let options = {
            duration: 3000
        };
        options.cssClass = 'loading-content';
        this.loadingController.create(options).then(createdLoader => {
            createdLoader.present().then(() => {
                console.log('presented');
                if (!this.isLoading) {
                    this.loadingController.dismiss();
                }
            });
        });
    }
    presentNonRestrictedLoading() {
        this.isNonRestrictedLoading = true;
        let options = {};
        options.cssClass = 'loading-content';
        this.loadingController.create(options).then(createdLoader => {
            createdLoader.present().then(() => {
                console.log('presented');
                if (!this.isNonRestrictedLoading) {
                    this.loadingController.dismiss();
                }
            });
        });
    }
    dismissNonRestrictedLoading() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (this.isNonRestrictedLoading = true) {
                this.loadingController.dismiss();
                console.log('dismissed');
            }
            this.isNonRestrictedLoading = false;
        });
    }
    dismiss() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            if (this.isLoading = true) {
                this.loadingController.dismiss();
                console.log('dismissed');
            }
            this.isLoading = false;
        });
    }
};
LoadingServiceService.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["LoadingController"] }
];
LoadingServiceService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], LoadingServiceService);



/***/ }),

/***/ "./src/app/services/toast-service.service.ts":
/*!***************************************************!*\
  !*** ./src/app/services/toast-service.service.ts ***!
  \***************************************************/
/*! exports provided: ToastServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToastServiceService", function() { return ToastServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");



let ToastServiceService = class ToastServiceService {
    constructor(toastController) {
        this.toastController = toastController;
    }
    present(message, position = 'bottom', durationMs = 2000) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const toast = yield this.toastController.create({
                message,
                position,
                duration: durationMs,
                cssClass: 'toast-message'
            });
            toast.present();
        });
    }
};
ToastServiceService.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_2__["ToastController"] }
];
ToastServiceService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ToastServiceService);



/***/ })

}]);
//# sourceMappingURL=default~checkout-checkout-module~learn-item-details-learn-item-details-module~learn-learn-module~my-~3905325e-es2015.js.map