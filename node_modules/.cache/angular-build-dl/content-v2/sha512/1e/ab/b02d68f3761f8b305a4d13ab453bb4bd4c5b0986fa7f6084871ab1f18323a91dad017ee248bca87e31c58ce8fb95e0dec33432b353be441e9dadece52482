{"version":3,"sources":["webpack:///src/app/pages/signup/signup.page.html","webpack:///src/app/pages/signup/signup-routing.module.ts","webpack:///src/app/pages/signup/signup.module.ts","webpack:///src/app/pages/signup/signup.page.scss","webpack:///src/app/pages/signup/signup.page.ts","webpack:///src/app/services/loading-service.service.ts","webpack:///src/app/services/toast-service.service.ts"],"names":["routes","path","component","SignupPageRoutingModule","imports","forChild","exports","SignupPageModule","declarations","SignupPage","navCtrl","formBuilder","toast","api","loading","emailPattern","mobilePattern","validation_messages","type","message","Form","group","email","compose","required","pattern","matching_passwords","password","minLength","confirm_password","formGroup","areEqual","valid","present","formData","value","console","log","register","then","res","dismiss","user","JSON","stringify","localStorage","setItem","navigateRoot","error","back","val","key","controls","hasOwnProperty","control","undefined","selector","template","LoadingServiceService","loadingController","isLoading","isNonRestrictedLoading","options","duration","cssClass","create","createdLoader","providedIn","ToastServiceService","toastController","position","durationMs"],"mappings":"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","file":"pages-signup-signup-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-text-center \\\">\\n  <div class=\\\"back-container\\\">\\n    <img src=\\\"assets/imgs/signup/back.png\\\" alt=\\\"\\\" (click)=\\\"back()\\\">\\n\\n  </div>\\n\\n\\n  <div class=\\\"logo_container\\\">\\n    <img class=\\\"logo\\\" src=\\\"assets/imgs/login/logo.png\\\" alt=\\\"\\\">\\n  </div>\\n  <form [formGroup]=\\\"Form\\\" (submit)=\\\"onSubmitSignup()\\\" novalidate>\\n\\n    <div class=\\\"container\\\">\\n      <!-- <div class=\\\"ion-text-center inputs_container\\\">\\n\\n        <ion-input placeholder=\\\"Name\\\" formControlName=\\\"name\\\"></ion-input>\\n\\n      </div>\\n      <div class=\\\"ion-text-center inputs_container\\\">\\n\\n        <ion-input placeholder=\\\"Mobile\\\" formControlName=\\\"mobile\\\"></ion-input>\\n\\n      </div>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.mobile\\\">\\n          <div class=\\\"error-message\\\"\\n            *ngIf=\\\"Form.get('mobile').hasError(validation.type) && (Form.get('mobile').dirty && Form.get('mobile').touched)\\\">\\n            {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div> -->\\n      <div class=\\\"ion-text-center inputs_container\\\">\\n\\n        <ion-input placeholder=\\\"Email\\\" formControlName=\\\"email\\\"></ion-input>\\n\\n      </div>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n          <div class=\\\"error-message\\\"\\n            *ngIf=\\\"Form.get('email').hasError(validation.type) && (Form.get('email').dirty && Form.get('email').touched)\\\">\\n            {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n      <ng-container formGroupName=\\\"matching_passwords\\\">\\n\\n        <div class=\\\"ion-text-center inputs_container\\\">\\n          <ion-input placeholder=\\\"Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n\\n        </div>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"Form.get('matching_passwords').get('password').hasError(validation.type) && (Form.get('matching_passwords').get('password').dirty && Form.get('matching_passwords').get('password').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <div class=\\\"ion-text-center inputs_container\\\">\\n          <ion-input placeholder=\\\"Confirm password\\\" type=\\\"password\\\" formControlName=\\\"confirm_password\\\"></ion-input>\\n\\n        </div>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.confirm_password\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"Form.get('matching_passwords').get('confirm_password').hasError(validation.type) && (Form.get('matching_passwords').get('confirm_password').dirty && Form.get('matching_passwords').get('confirm_password').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <!-- <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.matching_passwords\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"Form.get('matching_passwords').hasError(validation.type) && Form.get('matching_passwords').get('confirm_password').hasError(validation.type) && (Form.get('matching_passwords').get('confirm_password').dirty && Form.get('matching_passwords').get('confirm_password').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div> -->\\n      </ng-container>\\n    </div>\\n    <div class=\\\"button_container\\\">\\n      <ion-button class=\\\"singup\\\" expand=\\\"full\\\" shape=\\\"round\\\" type=\\\"submit\\\">SIGN Up</ion-button>\\n\\n    </div>\\n  </form>\\n\\n  <div class=\\\"footer\\\">\\n    <span>By clicking singup, you agree to our\\n    </span>\\n    <span class=\\\"bold\\\"> Terms and Conditions</span>\\n\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"ion-content {\\n  --background: var(--page-background);\\n}\\n\\n.logo_container {\\n  margin-top: -5vh;\\n}\\n\\n.logo {\\n  width: 30%;\\n}\\n\\n.singup {\\n  --background: linear-gradient(235deg, #08d3ff 0%, #178dd5 0%, #ff62a5 100%);\\n  margin-top: 5vh;\\n  height: 7vh;\\n}\\n\\n.inputs_container {\\n  padding-left: 10vw;\\n  padding-right: 10vw;\\n  margin-top: 3vh;\\n}\\n\\nion-input {\\n  background: white;\\n  height: 7vh;\\n  border-radius: 25px;\\n  color: #9b9b9b;\\n  --placeholder-color: #9b9b9b;\\n  --placeholder-opacity: 1;\\n}\\n\\n.button_container {\\n  padding-left: 10vw;\\n  padding-right: 10vw;\\n  margin-top: 15vh;\\n}\\n\\n.container {\\n  margin-top: 10vh;\\n}\\n\\n.footer {\\n  margin-top: 5vh;\\n  padding-left: 20vw;\\n  padding-right: 20vw;\\n  color: #9b9b9b;\\n}\\n\\n.footer .bold {\\n  font-weight: bold;\\n}\\n\\n.back-container {\\n  margin-top: 0;\\n}\\n\\n.back-container img {\\n  width: 35px;\\n  display: flex;\\n  margin: 6vw;\\n}\\n\\n.validation-errors {\\n  padding-left: 20px;\\n}\\n\\n.error-message {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQ0FBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNJLDJFQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7RUFDQSw0QkFBQTtFQUNBLHdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFDSTtFQUNJLGlCQUFBO0FBQ1I7O0FBR0E7RUFDSSxhQUFBO0FBQUo7O0FBRUk7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7QUFBUjs7QUFJQTtFQUNJLGtCQUFBO0FBREo7O0FBSUE7RUFDSSxVQUFBO0FBREoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogdmFyKC0tcGFnZS1iYWNrZ3JvdW5kKTtcclxufVxyXG5cclxuLmxvZ29fY29udGFpbmVyIHtcclxuICAgIG1hcmdpbi10b3A6IC01dmg7XHJcbn1cclxuXHJcbi5sb2dvIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbn1cclxuXHJcbi5zaW5ndXAge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMjM1ZGVnLCAjMDhkM2ZmIDAlLCAjMTc4ZGQ1IDAlLCAjZmY2MmE1IDEwMCUpO1xyXG4gICAgbWFyZ2luLXRvcDogNXZoO1xyXG4gICAgaGVpZ2h0OiA3dmg7XHJcbn1cclxuXHJcbi5pbnB1dHNfY29udGFpbmVyIHtcclxuICAgIHBhZGRpbmctbGVmdDogMTB2dztcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwdnc7XHJcbiAgICBtYXJnaW4tdG9wOiAzdmg7XHJcbn1cclxuXHJcbmlvbi1pbnB1dCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGhlaWdodDogN3ZoO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcclxuICAgIGNvbG9yOiAjOWI5YjliO1xyXG4gICAgLS1wbGFjZWhvbGRlci1jb2xvcjogIzliOWI5YjtcclxuICAgIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcclxufVxyXG5cclxuLmJ1dHRvbl9jb250YWluZXIge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHZ3O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTB2dztcclxuICAgIG1hcmdpbi10b3A6IDE1dmg7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTB2aDtcclxufVxyXG5cclxuLmZvb3RlciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1dmg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwdnc7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHZ3O1xyXG4gICAgY29sb3I6ICM5YjliOWI7XHJcblxyXG4gICAgLmJvbGQge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgfVxyXG59XHJcblxyXG4uYmFjay1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgbWFyZ2luOiA2dnc7XHJcbiAgICB9XHJcbn1cclxuXHJcbi52YWxpZGF0aW9uLWVycm9ycyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoadingServiceService } from 'src/app/services/loading-service.service';\nimport { AuthServiceService } from 'src/app/services/auth-service.service';\nimport { ToastServiceService } from 'src/app/services/toast-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  public Form: FormGroup;\n  emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  mobilePattern = /^(\\+2|002|2)?(011|010|012|015)([0-9]{8})$/;\n  validation_messages = {\n\n    // 'name': [\n    //   { type: 'required', message: 'First name is required.' }\n    // ],\n\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    // 'mobile': [\n    //   { type: 'pattern', message: 'Enter a valid mobile.' },\n    //   { type: 'required', message: 'A Mobile number is required' }\n\n    // ],\n\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 8 characters long.' },\n      { type: 'pattern', message: 'Your password must contain at least one uppercase, one lowercase, and one number.' }\n    ],\n    'confirm_password': [\n      { type: 'required', message: 'Confirm password is required' }\n    ],\n    'matching_passwords': [\n      { type: 'areEqual', message: 'Password fields don\\'t match' }\n    ]\n  };\n  constructor(private navCtrl: NavController, public formBuilder: FormBuilder, public toast: ToastServiceService,\n    public api: AuthServiceService, public loading: LoadingServiceService) {\n    this.Form = formBuilder.group({\n      // name: [\n      //   '',\n      //   Validators.compose([Validators.required])\n      // ],\n      email: [\n        '',\n        Validators.compose([Validators.required,\n        Validators.pattern(this.emailPattern)])\n      ],\n      // mobile: [\n      //   '',\n      //   Validators.compose([Validators.required,\n      //   Validators.pattern(this.mobilePattern)])\n      // ],\n      matching_passwords: new FormGroup({\n        password: new FormControl('', Validators.compose([\n          Validators.minLength(8),\n          Validators.required,\n        ])),\n        confirm_password: new FormControl('', Validators.required)\n      }, (formGroup: FormGroup) => {\n        return SignupPage.areEqual(formGroup);\n      })\n    });\n\n\n\n  }\n  static areEqual(formGroup: FormGroup) {\n    let val;\n    let valid = true;\n\n    for (let key in formGroup.controls) {\n      if (formGroup.controls.hasOwnProperty(key)) {\n        let control: FormControl = <FormControl>formGroup.controls[key];\n\n        if (val === undefined) {\n          val = control.value\n        } else {\n          if (val !== control.value) {\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    if (valid) {\n      return null;\n    }\n\n    return {\n      areEqual: true\n    };\n  }\n  ngOnInit() {\n  }\n  onSubmitSignup() {\n    if (!this.Form.valid) {\n      this.toast.present('Please check your information', 'bottom')\n    }\n    else {\n      const formData = this.Form.value\n\n      console.log('loading signup');\n\n      this.loading.present()\n\n      this.api.register(formData.email, formData.matching_passwords.password, formData.matching_passwords.confirm_password).then((res: any) => {\n        this.loading.dismiss()\n        console.log(res.user);\n\n        const user = JSON.stringify(res.user)\n        localStorage.setItem('userData', user)\n        this.navCtrl.navigateRoot(['tabs/home']);\n      }, error => {\n        this.loading.dismiss()\n        this.toast.present(error)\n\n        // if (error.error.email != null) {\n        //   this.toast.present(error.error.email)\n        // }\n        // else {\n        //   this.toast.present(error.error.password)\n\n        // }\n      })\n    }\n  }\n  back() {\n    this.navCtrl.back()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { LoadingOptions } from '@ionic/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingServiceService {\n  constructor(public loadingController: LoadingController) { }\n  public isLoading = false;\n  public isNonRestrictedLoading = false;\n\n  // async present() {\n  //   this.isLoading = true;\n  //   await this.loadingController\n  //     .create({\n  //       cssClass: 'loading-content'\n  //     })\n  //     .then(a => {\n  //       a.present().then(() => {\n  //         if (!this.isLoading) {\n  //           a.dismiss().then(() => console.log('abort presenting'));\n  //         }\n  //       });\n  //     });\n  // }\n\n  // async dismiss() {\n  //   this.isLoading = false;\n  //   await this.loadingController.dismiss();\n  // }\n\n\n  present() {\n    this.isLoading = true;\n    let options: LoadingOptions = {\n      duration: 3000\n    };\n\n    options.cssClass = 'loading-content'\n\n\n    this.loadingController.create(options).then(createdLoader => {\n      createdLoader.present().then(() => {\n        console.log('presented');\n        if (!this.isLoading) {\n          this.loadingController.dismiss();\n        }\n      })\n    })\n  }\n\n  presentNonRestrictedLoading() {\n    this.isNonRestrictedLoading = true;\n    let options: LoadingOptions = {\n    };\n\n    options.cssClass = 'loading-content'\n\n\n    this.loadingController.create(options).then(createdLoader => {\n      createdLoader.present().then(() => {\n        console.log('presented');\n        if (!this.isNonRestrictedLoading) {\n          this.loadingController.dismiss();\n        }\n      })\n    })\n  }\n\n  async dismissNonRestrictedLoading() {\n    if (this.isNonRestrictedLoading = true) {\n      this.loadingController.dismiss();\n      console.log('dismissed');\n    }\n    this.isNonRestrictedLoading = false;\n  }\n  async dismiss() {\n    if (this.isLoading = true) {\n      this.loadingController.dismiss();\n      console.log('dismissed');\n    }\n    this.isLoading = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastServiceService {\n\n  constructor(public toastController: ToastController) { }\n  async present(message: string, position: 'bottom' | 'top' | 'middle' = 'bottom', durationMs = 2000) {\n    const toast = await this.toastController.create({\n      message,\n      position,\n      duration: durationMs,\n      cssClass: 'toast-message'\n    });\n    toast.present();\n  }\n}"]}